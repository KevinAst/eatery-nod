// getEateryDetail() resp:

Body {
  url: 'https://maps.googleapis.com/maps/api/place/details/json?placeid=ChIJr7nIlGpV34cRlT0NYwJOLNg&key=YOUR_API_KEY',
  status: 200,
  statusText: 'OK',
  headers: 
   Headers {
     _headers: 
      { 'content-type': [Object],
        date: [Object],
        expires: [Object],
        'cache-control': [Object],
        vary: [Object],
        'content-encoding': [Object],
        server: [Object],
        'content-length': [Object],
        'x-xss-protection': [Object],
        'x-frame-options': [Object],
        'alt-svc': [Object],
        connection: [Object] } },
  ok: true,
  body: 
   Gunzip {
     _opts: {},
     _chunkSize: 16384,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        prefinish: [Object],
        unpipe: [Function: onunpipe],
        drain: [Function],
        error: [Function: onerror],
        close: [Object],
        finish: [Object] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 1006,
        writing: true,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: [Function: nop],
        writelen: 1006,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _transformState: 
      TransformState {
        afterTransform: [Function],
        needTransform: false,
        transforming: true,
        writecb: [Function],
        writechunk: <Buffer 1f 8b 08 00 00 00 00 00 02 ff bd 5a f9 6e e3 38 93 ff 7f 9e 82 ed 3f fa db c5 c6 b1 2e eb 68 20 f8 e0 23 71 9c f6 11 5f 71 9c 9d 86 41 49 b4 25 47 57 ... >,
        writeencoding: 'buffer' },
     _flushFlag: 0,
     _finishFlushFlag: 4,
     _handle: 
      Zlib {
        onerror: [Function],
        buffer: <Buffer 1f 8b 08 00 00 00 00 00 02 ff bd 5a f9 6e e3 38 93 ff 7f 9e 82 ed 3f fa db c5 c6 b1 2e eb 68 20 f8 e0 23 71 9c f6 11 5f 71 9c 9d 86 41 49 b4 25 47 57 ... >,
        callback: [Function: callback] },
     _hadError: false,
     _buffer: <Buffer 7b 0a 20 20 20 22 68 74 6d 6c 5f 61 74 74 72 69 62 75 74 69 6f 6e 73 22 20 3a 20 5b 5d 2c 0a 20 20 20 22 72 65 73 75 6c 74 22 20 3a 20 7b 0a 20 20 20 ... >,
     _offset: 0,
     _level: -1,
     _strategy: 0,
     _closed: [Getter] },
  bodyUsed: false,
  size: 0,
  timeout: 0,
  _raw: [],
  _abort: false
}
